name: SEN-64 Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Validate input
      run: powershell -File d:\tfsbuild\validate.ps1

    - name: Prebuild steps
      run: powershell -File d:\tfsbuild\prebuild.ps1

    - name: Test relative path includes
      if: ${{ success() && env.Build_TestRelativeIncludes == 'true' }}
      run: powershell -File ./d:\tfsbuild\testRelativePathIncludes.ps1
      timeout-minutes: 10

    - name: Validate XML configurations
      if: ${{ success() && env.Build_RunXMLConfigValidation == 'true' }}
      run: powershell -File ./d:\tfsbuild\validateXmlConfig.ps1
      continue-on-error: true
      timeout-minutes: 5

    - name: Compile ESA sources
      run: powershell -File d:\tfsbuild\buildA.ps1

    - name: Postbuild ESA
      run: powershell -File d:\tfsbuild\postbuildA.ps1

    - name: Snyk scan SCA-C++
      if: ${{ success() && env.Build_runSnykScans == 'true' }}
      uses: snyk/actions@master
      with:
        args: '--unmanaged -d --remote-repo-url=SCA-C++ --target-reference=${{ env.build_snykTargetReference }}'
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Snyk scan SCA-.NET
      if: ${{ success() && env.Build_runSnykScans == 'true' }}
      uses: snyk/actions@master
      with:
        args: '--all-projects --detection-depth=100 -d --exclude=Util,CADS --remote-repo-url="SCA-.NET" --target-reference=${{ env.build_snykTargetReference }}'
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Snyk scan SAST
      if: ${{ success() && env.Build_runSnykScans == 'true' }}
      uses: snyk/actions@master
      with:
        args: '--report --target-name="SAST" -d --target-reference=${{ env.build_snykTargetReferenceSast }}'
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Languages
      run: powershell -File d:\tfsbuild\languages.ps1

    - name: SDF forms
      run: powershell -File d:\tfsbuild\sdf.ps1

    - name: Pre-packing steps
      run: powershell -File d:\tfsbuild\prepack.ps1

    - name: Packing steps
      run: powershell -File d:\tfsbuild\packing.ps1

    - name: Publish Artifact: FullVer
      uses: actions/upload-artifact@v3
      with:
        name: FullVer
        path: ${{ github.workspace }}\_packed

    - name: Test Assemblies
      run: |
        vstest.console.exe *_msut.dll /Platform:x64 /InIsolation /Settings:d:\tfsbuild\vstest.runsettings
      env:
        Platform: ${{ env.Build_Platform }}
        Configuration: ${{ env.Build_Configuration }}
      timeout-minutes: 30

    - name: Prepare Poirots run
      if: ${{ success() && env.Build_RunPoirots == 'true' }}
      run: powershell -File ./d:\tfsbuild\preparePoirots.ps1

    - name: VsTest - Poirots
      if: ${{ success() && env.Build_RunPoirots == 'true' }}
      run: |
        vstest.console.exe *_MSP.dll /Platform:x64 /InIsolation
      timeout-minutes: 30
      continue-on-error: true

    - name: Check Poirots status
      run: powershell -File ./d:\tfsbuild\checkPoirotsStatus.ps1
      continue-on-error: true

    - name: Post packing steps
      run: powershell -File d:\tfsbuild\postpack.ps1

    - name: Count build warnings
      run: powershell -File ./d:\tfsbuild\countBuildWarnings.ps1
      continue-on-error: true
      timeout-minutes: 5

    - name: Compare build warnings
      run: powershell -File ./d:\tfsbuild\compareBuildWarnings.ps1
      continue-on-error: true
      timeout-minutes: 10

    - name: Copy Build result files
      run: |
        mkdir -p ${{ env.OutputRoot }}\${{ env.build_utftppath }}
        cp -r ${{ github.workspace }}\BuildResults\* ${{ env.OutputRoot }}\${{ env.build_utftppath }}
      continue-on-error: true

    - name: Finish steps
      run: powershell -File d:\tfsbuild\finish.ps1
      continue-on-error: true
